// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId   String  @id @default(cuid())
  username String
  mobile   String  @unique
  otp      String
  otpExpiry DateTime
  createdAt DateTime @default(now())
  wallet   Wallet?
  rooms    Room[] @relation("Matches")
  winnings Room[] @relation("Winnings")
  referralCode String? @unique
  verified Boolean @default(false)
  payments Payment[]
  referredBy Referral? @relation("Referee")
  referrals Referral[] @relation("Referrer")
  @@index([mobile])
}

model Wallet {
  walletId String @id @default(cuid())
  userId   String @unique
  user     User   @relation(fields: [userId], references: [userId])
  balance  Float  @default(0)
}

model Banner{
  bannerId String @id @default(cuid())
  bannerName String
  bannerUrl String
  createdAt DateTime @default(now())
}

model Game{
  gameId String @id @default(cuid())
  gameName GameName
  entryFee Float
  winAmount Float
  maxPlayers Int
  isActive Boolean @default(true)
  rooms Room[]
  @@index([gameName])
}

model Payment {
  paymentId String @id
  userId String
  user User @relation(fields: [userId], references: [userId])
  amount Float
  paymentStatus PaymentStatus @default(Pending)
  paymentType PaymentType
  createdAt DateTime @default(now())
  @@index([userId])
}

enum PaymentType {
  DEPOSIT
  WITHDRAW
}

enum PaymentStatus {
  Pending
  Success
  Failed
}

model Room {
  roomId String @id
  gameId String
  game Game @relation(fields: [gameId], references: [gameId])
  players User[] @relation("Matches")
  createdAt DateTime @default(now())
  winnerId String?
  winAmount Float @default(0)
  winner User?  @relation("Winnings", fields: [winnerId], references: [userId])
}

enum GameName {
  LUDO
  MINES
  MEMORY
}

model Referral {
  referralId     String   @id @default(cuid())
  referredBy  String
  referredTo  String   @unique
  referredAt  DateTime @default(now())
  referrer    User     @relation("Referrer", fields: [referredBy], references: [userId])
  referee     User     @relation("Referee",  fields: [referredTo], references: [userId])
  bonus Float @default(100)
  @@index([referredBy, referredTo])
  @@unique([referredBy, referredTo])
}








